// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_address0,
        data_0_V_ce0,
        data_0_V_q0,
        data_1_V_address0,
        data_1_V_ce0,
        data_1_V_q0,
        data_2_V_address0,
        data_2_V_ce0,
        data_2_V_q0,
        data_3_V_address0,
        data_3_V_ce0,
        data_3_V_q0,
        data_4_V_address0,
        data_4_V_ce0,
        data_4_V_q0,
        data_5_V_address0,
        data_5_V_ce0,
        data_5_V_q0,
        data_6_V_address0,
        data_6_V_ce0,
        data_6_V_q0,
        data_7_V_address0,
        data_7_V_ce0,
        data_7_V_q0,
        res_0_V_address0,
        res_0_V_ce0,
        res_0_V_we0,
        res_0_V_d0,
        res_1_V_address0,
        res_1_V_ce0,
        res_1_V_we0,
        res_1_V_d0,
        res_2_V_address0,
        res_2_V_ce0,
        res_2_V_we0,
        res_2_V_d0,
        res_3_V_address0,
        res_3_V_ce0,
        res_3_V_we0,
        res_3_V_d0,
        res_4_V_address0,
        res_4_V_ce0,
        res_4_V_we0,
        res_4_V_d0,
        res_5_V_address0,
        res_5_V_ce0,
        res_5_V_we0,
        res_5_V_d0,
        res_6_V_address0,
        res_6_V_ce0,
        res_6_V_we0,
        res_6_V_d0,
        res_7_V_address0,
        res_7_V_ce0,
        res_7_V_we0,
        res_7_V_d0
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [9:0] data_0_V_address0;
output   data_0_V_ce0;
input  [15:0] data_0_V_q0;
output  [9:0] data_1_V_address0;
output   data_1_V_ce0;
input  [15:0] data_1_V_q0;
output  [9:0] data_2_V_address0;
output   data_2_V_ce0;
input  [15:0] data_2_V_q0;
output  [9:0] data_3_V_address0;
output   data_3_V_ce0;
input  [15:0] data_3_V_q0;
output  [9:0] data_4_V_address0;
output   data_4_V_ce0;
input  [15:0] data_4_V_q0;
output  [9:0] data_5_V_address0;
output   data_5_V_ce0;
input  [15:0] data_5_V_q0;
output  [9:0] data_6_V_address0;
output   data_6_V_ce0;
input  [15:0] data_6_V_q0;
output  [9:0] data_7_V_address0;
output   data_7_V_ce0;
input  [15:0] data_7_V_q0;
output  [3:0] res_0_V_address0;
output   res_0_V_ce0;
output   res_0_V_we0;
output  [15:0] res_0_V_d0;
output  [3:0] res_1_V_address0;
output   res_1_V_ce0;
output   res_1_V_we0;
output  [15:0] res_1_V_d0;
output  [3:0] res_2_V_address0;
output   res_2_V_ce0;
output   res_2_V_we0;
output  [15:0] res_2_V_d0;
output  [3:0] res_3_V_address0;
output   res_3_V_ce0;
output   res_3_V_we0;
output  [15:0] res_3_V_d0;
output  [3:0] res_4_V_address0;
output   res_4_V_ce0;
output   res_4_V_we0;
output  [15:0] res_4_V_d0;
output  [3:0] res_5_V_address0;
output   res_5_V_ce0;
output   res_5_V_we0;
output  [15:0] res_5_V_d0;
output  [3:0] res_6_V_address0;
output   res_6_V_ce0;
output   res_6_V_we0;
output  [15:0] res_6_V_d0;
output  [3:0] res_7_V_address0;
output   res_7_V_ce0;
output   res_7_V_we0;
output  [15:0] res_7_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_0_V_ce0;
reg data_1_V_ce0;
reg data_2_V_ce0;
reg data_3_V_ce0;
reg data_4_V_ce0;
reg data_5_V_ce0;
reg data_6_V_ce0;
reg data_7_V_ce0;
reg res_0_V_ce0;
reg res_0_V_we0;
reg res_1_V_ce0;
reg res_1_V_we0;
reg res_2_V_ce0;
reg res_2_V_we0;
reg res_3_V_ce0;
reg res_3_V_we0;
reg res_4_V_ce0;
reg res_4_V_we0;
reg res_5_V_ce0;
reg res_5_V_we0;
reg res_6_V_ce0;
reg res_6_V_we0;
reg res_7_V_ce0;
reg res_7_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [19:0] w6_V_address0;
reg    w6_V_ce0;
wire   [10:0] w6_V_q0;
wire   [6:0] b6_V_address0;
reg    b6_V_ce0;
wire   [9:0] b6_V_q0;
wire   [15:0] acc_V_q0;
reg   [15:0] reg_489;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
wire   [26:0] next_mul_fu_501_p2;
reg   [26:0] next_mul_reg_752;
wire    ap_CS_fsm_state2;
wire   [12:0] ii_7_fu_513_p2;
reg   [12:0] ii_7_reg_760;
reg   [3:0] tmp_466_reg_765;
wire   [0:0] tmp_fu_507_p2;
reg   [15:0] data_0_V_load_reg_810;
wire    ap_CS_fsm_state3;
reg   [15:0] data_1_V_load_reg_815;
reg   [15:0] data_2_V_load_reg_820;
reg   [15:0] data_3_V_load_reg_825;
reg   [15:0] data_4_V_load_reg_830;
reg   [15:0] data_5_V_load_reg_835;
reg   [15:0] data_6_V_load_reg_840;
reg   [15:0] data_7_V_load_reg_845;
wire   [19:0] tmp_227_fu_558_p3;
reg   [19:0] tmp_227_reg_850;
wire    ap_CS_fsm_state4;
wire  signed [25:0] OP1_V_cast_fu_566_p1;
reg  signed [25:0] OP1_V_cast_reg_855;
wire   [7:0] jj_3_fu_580_p2;
reg   [7:0] jj_3_reg_863;
wire    ap_CS_fsm_state5;
wire   [19:0] index_fu_586_p2;
reg   [19:0] index_reg_868;
wire   [0:0] tmp_230_fu_574_p2;
wire   [12:0] idx_urem_fu_603_p3;
wire   [63:0] tmp_233_fu_611_p1;
reg   [63:0] tmp_233_reg_878;
wire    ap_CS_fsm_state6;
reg  signed [10:0] w6_V_load_reg_888;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire  signed [25:0] grp_fu_747_p2;
reg  signed [25:0] p_Val2_s_reg_898;
wire    ap_CS_fsm_state10;
wire   [7:0] iacc_2_fu_634_p2;
reg   [7:0] iacc_2_reg_906;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_229_fu_640_p1;
reg   [63:0] tmp_229_reg_911;
wire   [0:0] tmp_s_fu_628_p2;
reg   [9:0] b6_V_load_reg_921;
wire    ap_CS_fsm_state13;
wire   [12:0] ii_8_fu_655_p2;
reg   [12:0] ii_8_reg_929;
wire    ap_CS_fsm_state15;
wire   [19:0] tmp_232_fu_661_p3;
reg   [19:0] tmp_232_reg_934;
wire   [0:0] tmp_228_fu_649_p2;
wire   [7:0] jj_4_fu_679_p2;
reg   [7:0] jj_4_reg_942;
wire    ap_CS_fsm_state16;
wire   [19:0] index_2_fu_685_p2;
reg   [19:0] index_2_reg_947;
wire   [0:0] tmp_237_fu_673_p2;
reg   [6:0] acc_V_addr_4_reg_952;
wire    ap_CS_fsm_state17;
wire   [15:0] mult_V_q0;
reg   [15:0] p_Val2_28_reg_962;
wire   [15:0] p_Val2_s_62_fu_699_p2;
reg   [15:0] p_Val2_s_62_reg_967;
wire    ap_CS_fsm_state19;
wire   [7:0] ires_2_fu_710_p2;
reg   [7:0] ires_2_reg_975;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_231_fu_704_p2;
reg   [3:0] arrayNo4_cast_reg_985;
reg   [3:0] res_0_V_addr_reg_989;
reg   [3:0] res_1_V_addr_reg_994;
reg   [3:0] res_2_V_addr_reg_999;
reg   [3:0] res_3_V_addr_reg_1004;
reg   [3:0] res_4_V_addr_reg_1009;
reg   [3:0] res_5_V_addr_reg_1014;
reg   [3:0] res_6_V_addr_reg_1019;
reg   [3:0] res_7_V_addr_reg_1024;
reg   [19:0] mult_V_address0;
reg    mult_V_ce0;
reg    mult_V_we0;
wire   [15:0] mult_V_d0;
reg   [6:0] acc_V_address0;
reg    acc_V_ce0;
reg    acc_V_we0;
reg   [15:0] acc_V_d0;
reg   [12:0] ii_reg_398;
reg    ap_block_state1;
reg   [26:0] phi_mul_reg_410;
reg   [12:0] phi_urem_reg_421;
reg   [7:0] jj_reg_433;
wire    ap_CS_fsm_state11;
reg   [7:0] iacc_reg_444;
wire    ap_CS_fsm_state14;
reg   [12:0] ii2_reg_455;
reg   [7:0] jj3_reg_466;
wire    ap_CS_fsm_state20;
reg   [7:0] ires_reg_477;
wire    ap_CS_fsm_state24;
wire   [63:0] newIndex7_fu_529_p1;
wire   [63:0] tmp_238_fu_690_p1;
wire   [63:0] tmp_239_fu_695_p1;
wire   [63:0] tmp_236_fu_716_p1;
wire   [63:0] newIndex8_fu_735_p1;
wire  signed [15:0] b6_V_load_cast_fu_645_p1;
wire    ap_CS_fsm_state23;
wire   [31:0] cache_V_fu_544_p9;
wire   [15:0] cache_V_fu_544_p10;
wire   [19:0] jj_cast_fu_570_p1;
wire   [12:0] next_urem_fu_591_p2;
wire   [0:0] tmp_467_fu_597_p2;
wire   [19:0] jj3_cast_fu_669_p1;
wire   [3:0] tmp_468_fu_731_p1;
wire  signed [15:0] grp_fu_747_p0;
reg   [23:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
end

dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_w6_V #(
    .DataWidth( 11 ),
    .AddressRange( 720896 ),
    .AddressWidth( 20 ))
w6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w6_V_address0),
    .ce0(w6_V_ce0),
    .q0(w6_V_q0)
);

dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_b6_V #(
    .DataWidth( 10 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
b6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b6_V_address0),
    .ce0(b6_V_ce0),
    .q0(b6_V_q0)
);

dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_mult_V #(
    .DataWidth( 16 ),
    .AddressRange( 720896 ),
    .AddressWidth( 20 ))
mult_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mult_V_address0),
    .ce0(mult_V_ce0),
    .we0(mult_V_we0),
    .d0(mult_V_d0),
    .q0(mult_V_q0)
);

dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s_acc_V #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
acc_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(acc_V_address0),
    .ce0(acc_V_ce0),
    .we0(acc_V_we0),
    .d0(acc_V_d0),
    .q0(acc_V_q0)
);

myproject_mux_832_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
myproject_mux_832_16_1_1_U594(
    .din0(data_0_V_load_reg_810),
    .din1(data_1_V_load_reg_815),
    .din2(data_2_V_load_reg_820),
    .din3(data_3_V_load_reg_825),
    .din4(data_4_V_load_reg_830),
    .din5(data_5_V_load_reg_835),
    .din6(data_6_V_load_reg_840),
    .din7(data_7_V_load_reg_845),
    .din8(cache_V_fu_544_p9),
    .dout(cache_V_fu_544_p10)
);

myproject_mul_mul_16s_11s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_11s_26_3_1_U595(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_747_p0),
    .din1(w6_V_load_reg_888),
    .ce(1'b1),
    .dout(grp_fu_747_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_231_fu_704_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_507_p2 == 1'd1))) begin
        iacc_reg_444 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        iacc_reg_444 <= iacc_2_reg_906;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_628_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ii2_reg_455 <= 13'd0;
    end else if (((tmp_237_fu_673_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        ii2_reg_455 <= ii_8_reg_929;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_reg_398 <= 13'd0;
    end else if (((tmp_230_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ii_reg_398 <= ii_7_reg_760;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_228_fu_649_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ires_reg_477 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ires_reg_477 <= ires_2_reg_975;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        jj3_reg_466 <= jj_4_reg_942;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_228_fu_649_p2 == 1'd0))) begin
        jj3_reg_466 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        jj_reg_433 <= jj_3_reg_863;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        jj_reg_433 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_410 <= 27'd0;
    end else if (((tmp_230_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul_reg_410 <= next_mul_reg_752;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_urem_reg_421 <= 13'd0;
    end else if (((tmp_230_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_urem_reg_421 <= idx_urem_fu_603_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        OP1_V_cast_reg_855 <= OP1_V_cast_fu_566_p1;
        tmp_227_reg_850[19 : 7] <= tmp_227_fu_558_p3[19 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_237_fu_673_p2 == 1'd0))) begin
        acc_V_addr_4_reg_952 <= tmp_238_fu_690_p1;
        index_2_reg_947 <= index_2_fu_685_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        arrayNo4_cast_reg_985 <= {{ires_reg_477[7:4]}};
        res_0_V_addr_reg_989 <= newIndex8_fu_735_p1;
        res_1_V_addr_reg_994 <= newIndex8_fu_735_p1;
        res_2_V_addr_reg_999 <= newIndex8_fu_735_p1;
        res_3_V_addr_reg_1004 <= newIndex8_fu_735_p1;
        res_4_V_addr_reg_1009 <= newIndex8_fu_735_p1;
        res_5_V_addr_reg_1014 <= newIndex8_fu_735_p1;
        res_6_V_addr_reg_1019 <= newIndex8_fu_735_p1;
        res_7_V_addr_reg_1024 <= newIndex8_fu_735_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b6_V_load_reg_921 <= b6_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_0_V_load_reg_810 <= data_0_V_q0;
        data_1_V_load_reg_815 <= data_1_V_q0;
        data_2_V_load_reg_820 <= data_2_V_q0;
        data_3_V_load_reg_825 <= data_3_V_q0;
        data_4_V_load_reg_830 <= data_4_V_q0;
        data_5_V_load_reg_835 <= data_5_V_q0;
        data_6_V_load_reg_840 <= data_6_V_q0;
        data_7_V_load_reg_845 <= data_7_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        iacc_2_reg_906 <= iacc_2_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ii_7_reg_760 <= ii_7_fu_513_p2;
        next_mul_reg_752 <= next_mul_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ii_8_reg_929 <= ii_8_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_230_fu_574_p2 == 1'd0))) begin
        index_reg_868 <= index_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ires_2_reg_975 <= ires_2_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        jj_3_reg_863 <= jj_3_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        jj_4_reg_942 <= jj_4_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        p_Val2_28_reg_962 <= mult_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Val2_s_62_reg_967 <= p_Val2_s_62_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_Val2_s_reg_898 <= grp_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_489 <= acc_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_s_fu_628_p2 == 1'd0))) begin
        tmp_229_reg_911[7 : 0] <= tmp_229_fu_640_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_228_fu_649_p2 == 1'd0))) begin
        tmp_232_reg_934[19 : 7] <= tmp_232_fu_661_p3[19 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_233_reg_878[19 : 0] <= tmp_233_fu_611_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_507_p2 == 1'd0))) begin
        tmp_466_reg_765 <= {{phi_mul_reg_410[26:23]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        w6_V_load_reg_888 <= w6_V_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        acc_V_address0 = tmp_236_fu_716_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17))) begin
        acc_V_address0 = acc_V_addr_4_reg_952;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        acc_V_address0 = tmp_229_reg_911;
    end else begin
        acc_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17))) begin
        acc_V_ce0 = 1'b1;
    end else begin
        acc_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        acc_V_d0 = p_Val2_s_62_reg_967;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        acc_V_d0 = b6_V_load_cast_fu_645_p1;
    end else begin
        acc_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14))) begin
        acc_V_we0 = 1'b1;
    end else begin
        acc_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_231_fu_704_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_231_fu_704_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        b6_V_ce0 = 1'b1;
    end else begin
        b6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_0_V_ce0 = 1'b1;
    end else begin
        data_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_1_V_ce0 = 1'b1;
    end else begin
        data_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_2_V_ce0 = 1'b1;
    end else begin
        data_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_3_V_ce0 = 1'b1;
    end else begin
        data_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_4_V_ce0 = 1'b1;
    end else begin
        data_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_5_V_ce0 = 1'b1;
    end else begin
        data_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_6_V_ce0 = 1'b1;
    end else begin
        data_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_7_V_ce0 = 1'b1;
    end else begin
        data_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mult_V_address0 = tmp_239_fu_695_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        mult_V_address0 = tmp_233_reg_878;
    end else begin
        mult_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17))) begin
        mult_V_ce0 = 1'b1;
    end else begin
        mult_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mult_V_we0 = 1'b1;
    end else begin
        mult_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_0_V_ce0 = 1'b1;
    end else begin
        res_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo4_cast_reg_985 == 4'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        res_0_V_we0 = 1'b1;
    end else begin
        res_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_1_V_ce0 = 1'b1;
    end else begin
        res_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo4_cast_reg_985 == 4'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        res_1_V_we0 = 1'b1;
    end else begin
        res_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_2_V_ce0 = 1'b1;
    end else begin
        res_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo4_cast_reg_985 == 4'd2) & (1'b1 == ap_CS_fsm_state23))) begin
        res_2_V_we0 = 1'b1;
    end else begin
        res_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_3_V_ce0 = 1'b1;
    end else begin
        res_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo4_cast_reg_985 == 4'd3) & (1'b1 == ap_CS_fsm_state23))) begin
        res_3_V_we0 = 1'b1;
    end else begin
        res_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_4_V_ce0 = 1'b1;
    end else begin
        res_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo4_cast_reg_985 == 4'd4) & (1'b1 == ap_CS_fsm_state23))) begin
        res_4_V_we0 = 1'b1;
    end else begin
        res_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_5_V_ce0 = 1'b1;
    end else begin
        res_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo4_cast_reg_985 == 4'd5) & (1'b1 == ap_CS_fsm_state23))) begin
        res_5_V_we0 = 1'b1;
    end else begin
        res_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_6_V_ce0 = 1'b1;
    end else begin
        res_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo4_cast_reg_985 == 4'd6) & (1'b1 == ap_CS_fsm_state23))) begin
        res_6_V_we0 = 1'b1;
    end else begin
        res_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_7_V_ce0 = 1'b1;
    end else begin
        res_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo4_cast_reg_985 == 4'd0) & ~(arrayNo4_cast_reg_985 == 4'd1) & ~(arrayNo4_cast_reg_985 == 4'd2) & ~(arrayNo4_cast_reg_985 == 4'd3) & ~(arrayNo4_cast_reg_985 == 4'd4) & ~(arrayNo4_cast_reg_985 == 4'd5) & ~(arrayNo4_cast_reg_985 == 4'd6) & (1'b1 == ap_CS_fsm_state23))) begin
        res_7_V_we0 = 1'b1;
    end else begin
        res_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        w6_V_ce0 = 1'b1;
    end else begin
        w6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_507_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_230_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state12 : begin
            if (((tmp_s_fu_628_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state15 : begin
            if (((tmp_228_fu_649_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((tmp_237_fu_673_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state21 : begin
            if (((tmp_231_fu_704_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_cast_fu_566_p1 = $signed(cache_V_fu_544_p10);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign b6_V_address0 = tmp_229_fu_640_p1;

assign b6_V_load_cast_fu_645_p1 = $signed(b6_V_load_reg_921);

assign cache_V_fu_544_p9 = tmp_466_reg_765;

assign data_0_V_address0 = newIndex7_fu_529_p1;

assign data_1_V_address0 = newIndex7_fu_529_p1;

assign data_2_V_address0 = newIndex7_fu_529_p1;

assign data_3_V_address0 = newIndex7_fu_529_p1;

assign data_4_V_address0 = newIndex7_fu_529_p1;

assign data_5_V_address0 = newIndex7_fu_529_p1;

assign data_6_V_address0 = newIndex7_fu_529_p1;

assign data_7_V_address0 = newIndex7_fu_529_p1;

assign grp_fu_747_p0 = OP1_V_cast_reg_855;

assign iacc_2_fu_634_p2 = (iacc_reg_444 + 8'd1);

assign idx_urem_fu_603_p3 = ((tmp_467_fu_597_p2[0:0] === 1'b1) ? next_urem_fu_591_p2 : 13'd0);

assign ii_7_fu_513_p2 = (ii_reg_398 + 13'd1);

assign ii_8_fu_655_p2 = (ii2_reg_455 + 13'd1);

assign index_2_fu_685_p2 = (tmp_232_reg_934 + jj3_cast_fu_669_p1);

assign index_fu_586_p2 = (tmp_227_reg_850 + jj_cast_fu_570_p1);

assign ires_2_fu_710_p2 = (ires_reg_477 + 8'd1);

assign jj3_cast_fu_669_p1 = jj3_reg_466;

assign jj_3_fu_580_p2 = (jj_reg_433 + 8'd1);

assign jj_4_fu_679_p2 = (jj3_reg_466 + 8'd1);

assign jj_cast_fu_570_p1 = jj_reg_433;

assign mult_V_d0 = {{p_Val2_s_reg_898[25:10]}};

assign newIndex7_fu_529_p1 = phi_urem_reg_421;

assign newIndex8_fu_735_p1 = tmp_468_fu_731_p1;

assign next_mul_fu_501_p2 = (phi_mul_reg_410 + 27'd11916);

assign next_urem_fu_591_p2 = (phi_urem_reg_421 + 13'd1);

assign p_Val2_s_62_fu_699_p2 = (reg_489 + p_Val2_28_reg_962);

assign res_0_V_address0 = res_0_V_addr_reg_989;

assign res_0_V_d0 = reg_489;

assign res_1_V_address0 = res_1_V_addr_reg_994;

assign res_1_V_d0 = reg_489;

assign res_2_V_address0 = res_2_V_addr_reg_999;

assign res_2_V_d0 = reg_489;

assign res_3_V_address0 = res_3_V_addr_reg_1004;

assign res_3_V_d0 = reg_489;

assign res_4_V_address0 = res_4_V_addr_reg_1009;

assign res_4_V_d0 = reg_489;

assign res_5_V_address0 = res_5_V_addr_reg_1014;

assign res_5_V_d0 = reg_489;

assign res_6_V_address0 = res_6_V_addr_reg_1019;

assign res_6_V_d0 = reg_489;

assign res_7_V_address0 = res_7_V_addr_reg_1024;

assign res_7_V_d0 = reg_489;

assign tmp_227_fu_558_p3 = {{ii_reg_398}, {7'd0}};

assign tmp_228_fu_649_p2 = ((ii2_reg_455 == 13'd5632) ? 1'b1 : 1'b0);

assign tmp_229_fu_640_p1 = iacc_reg_444;

assign tmp_230_fu_574_p2 = ((jj_reg_433 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_231_fu_704_p2 = ((ires_reg_477 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_232_fu_661_p3 = {{ii2_reg_455}, {7'd0}};

assign tmp_233_fu_611_p1 = index_reg_868;

assign tmp_236_fu_716_p1 = ires_reg_477;

assign tmp_237_fu_673_p2 = ((jj3_reg_466 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_238_fu_690_p1 = jj3_reg_466;

assign tmp_239_fu_695_p1 = index_2_reg_947;

assign tmp_467_fu_597_p2 = ((next_urem_fu_591_p2 < 13'd704) ? 1'b1 : 1'b0);

assign tmp_468_fu_731_p1 = ires_reg_477[3:0];

assign tmp_fu_507_p2 = ((ii_reg_398 == 13'd5632) ? 1'b1 : 1'b0);

assign tmp_s_fu_628_p2 = ((iacc_reg_444 == 8'd128) ? 1'b1 : 1'b0);

assign w6_V_address0 = tmp_233_fu_611_p1;

always @ (posedge ap_clk) begin
    tmp_227_reg_850[6:0] <= 7'b0000000;
    tmp_233_reg_878[63:20] <= 44'b00000000000000000000000000000000000000000000;
    tmp_229_reg_911[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_232_reg_934[6:0] <= 7'b0000000;
end

endmodule //dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s
