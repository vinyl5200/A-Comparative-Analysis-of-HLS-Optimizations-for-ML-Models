-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    data_0_V_ce0 : OUT STD_LOGIC;
    data_0_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_0_V_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    data_0_V_ce1 : OUT STD_LOGIC;
    data_0_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    data_1_V_ce0 : OUT STD_LOGIC;
    data_1_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    data_1_V_ce1 : OUT STD_LOGIC;
    data_1_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    data_2_V_ce0 : OUT STD_LOGIC;
    data_2_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    data_2_V_ce1 : OUT STD_LOGIC;
    data_2_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    res_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_0_V_ap_vld : OUT STD_LOGIC;
    res_1_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_1_V_ap_vld : OUT STD_LOGIC;
    res_2_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_2_V_ap_vld : OUT STD_LOGIC;
    res_3_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_3_V_ap_vld : OUT STD_LOGIC;
    res_4_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_4_V_ap_vld : OUT STD_LOGIC;
    res_5_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_5_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_idle : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_ready : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce0 : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce1 : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce0 : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce1 : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce0 : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce1 : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V_ap_vld : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V_ap_vld : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V_ap_vld : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V_ap_vld : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V_ap_vld : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V_ap_vld : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call0 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;

    component softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_0_V_ce0 : OUT STD_LOGIC;
        data_0_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_0_V_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_0_V_ce1 : OUT STD_LOGIC;
        data_0_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_1_V_ce0 : OUT STD_LOGIC;
        data_1_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_1_V_ce1 : OUT STD_LOGIC;
        data_1_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_2_V_ce0 : OUT STD_LOGIC;
        data_2_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_2_V_ce1 : OUT STD_LOGIC;
        data_2_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        res_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_0_V_ap_vld : OUT STD_LOGIC;
        res_1_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_1_V_ap_vld : OUT STD_LOGIC;
        res_2_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_2_V_ap_vld : OUT STD_LOGIC;
        res_3_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_3_V_ap_vld : OUT STD_LOGIC;
        res_4_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_4_V_ap_vld : OUT STD_LOGIC;
        res_5_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_5_V_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24 : component softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start,
        ap_done => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done,
        ap_idle => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_idle,
        ap_ready => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_ready,
        data_0_V_address0 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address0,
        data_0_V_ce0 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce0,
        data_0_V_q0 => data_0_V_q0,
        data_0_V_address1 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address1,
        data_0_V_ce1 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce1,
        data_0_V_q1 => data_0_V_q1,
        data_1_V_address0 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address0,
        data_1_V_ce0 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce0,
        data_1_V_q0 => data_1_V_q0,
        data_1_V_address1 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address1,
        data_1_V_ce1 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce1,
        data_1_V_q1 => data_1_V_q1,
        data_2_V_address0 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address0,
        data_2_V_ce0 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce0,
        data_2_V_q0 => data_2_V_q0,
        data_2_V_address1 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address1,
        data_2_V_ce1 => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce1,
        data_2_V_q1 => data_2_V_q1,
        res_0_V => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V,
        res_0_V_ap_vld => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V_ap_vld,
        res_1_V => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V,
        res_1_V_ap_vld => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V_ap_vld,
        res_2_V => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V,
        res_2_V_ap_vld => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V_ap_vld,
        res_3_V => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V,
        res_3_V_ap_vld => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V_ap_vld,
        res_4_V => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V,
        res_4_V_ap_vld => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V_ap_vld,
        res_5_V => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V,
        res_5_V_ap_vld => grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done, ap_CS_fsm_state2)
    begin
        if (((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done, ap_CS_fsm_state2)
    begin
        if (((grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    data_0_V_address0 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address0;
    data_0_V_address1 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address1;
    data_0_V_ce0 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce0;
    data_0_V_ce1 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce1;
    data_1_V_address0 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address0;
    data_1_V_address1 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address1;
    data_1_V_ce0 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce0;
    data_1_V_ce1 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce1;
    data_2_V_address0 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address0;
    data_2_V_address1 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address1;
    data_2_V_ce0 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce0;
    data_2_V_ce1 <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce1;
    grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start_reg;
    res_0_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V;
    res_0_V_ap_vld <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V_ap_vld;
    res_1_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V;
    res_1_V_ap_vld <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V_ap_vld;
    res_2_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V;
    res_2_V_ap_vld <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V_ap_vld;
    res_3_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V;
    res_3_V_ap_vld <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V_ap_vld;
    res_4_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V;
    res_4_V_ap_vld <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V_ap_vld;
    res_5_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V;
    res_5_V_ap_vld <= grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V_ap_vld;
end behav;
