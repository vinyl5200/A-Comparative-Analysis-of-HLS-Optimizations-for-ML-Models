// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s_HH_
#define _softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s.h"

namespace ap_rtl {

struct softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s : public sc_module {
    // Port declarations 37
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<1> > data_0_V_address0;
    sc_out< sc_logic > data_0_V_ce0;
    sc_in< sc_lv<16> > data_0_V_q0;
    sc_out< sc_lv<1> > data_0_V_address1;
    sc_out< sc_logic > data_0_V_ce1;
    sc_in< sc_lv<16> > data_0_V_q1;
    sc_out< sc_lv<1> > data_1_V_address0;
    sc_out< sc_logic > data_1_V_ce0;
    sc_in< sc_lv<16> > data_1_V_q0;
    sc_out< sc_lv<1> > data_1_V_address1;
    sc_out< sc_logic > data_1_V_ce1;
    sc_in< sc_lv<16> > data_1_V_q1;
    sc_out< sc_lv<1> > data_2_V_address0;
    sc_out< sc_logic > data_2_V_ce0;
    sc_in< sc_lv<16> > data_2_V_q0;
    sc_out< sc_lv<1> > data_2_V_address1;
    sc_out< sc_logic > data_2_V_ce1;
    sc_in< sc_lv<16> > data_2_V_q1;
    sc_out< sc_lv<16> > res_0_V;
    sc_out< sc_logic > res_0_V_ap_vld;
    sc_out< sc_lv<16> > res_1_V;
    sc_out< sc_logic > res_1_V_ap_vld;
    sc_out< sc_lv<16> > res_2_V;
    sc_out< sc_logic > res_2_V_ap_vld;
    sc_out< sc_lv<16> > res_3_V;
    sc_out< sc_logic > res_3_V_ap_vld;
    sc_out< sc_lv<16> > res_4_V;
    sc_out< sc_logic > res_4_V_ap_vld;
    sc_out< sc_lv<16> > res_5_V;
    sc_out< sc_logic > res_5_V_ap_vld;


    // Module declarations
    softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s);

    ~softmax_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_softmax_config11_s();

    sc_trace_file* mVcdFile;

    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s* grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_done;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_idle;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_ready;
    sc_signal< sc_lv<1> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address0;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce0;
    sc_signal< sc_lv<1> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_address1;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_0_V_ce1;
    sc_signal< sc_lv<1> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address0;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce0;
    sc_signal< sc_lv<1> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_address1;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_1_V_ce1;
    sc_signal< sc_lv<1> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address0;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce0;
    sc_signal< sc_lv<1> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_address1;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_data_2_V_ce1;
    sc_signal< sc_lv<16> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_0_V_ap_vld;
    sc_signal< sc_lv<16> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_1_V_ap_vld;
    sc_signal< sc_lv<16> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_2_V_ap_vld;
    sc_signal< sc_lv<16> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_3_V_ap_vld;
    sc_signal< sc_lv<16> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_4_V_ap_vld;
    sc_signal< sc_lv<16> > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_res_5_V_ap_vld;
    sc_signal< sc_logic > grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call0;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_block_state1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state1();
    void thread_ap_block_state1_ignore_call0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_0_V_address0();
    void thread_data_0_V_address1();
    void thread_data_0_V_ce0();
    void thread_data_0_V_ce1();
    void thread_data_1_V_address0();
    void thread_data_1_V_address1();
    void thread_data_1_V_ce0();
    void thread_data_1_V_ce1();
    void thread_data_2_V_address0();
    void thread_data_2_V_address1();
    void thread_data_2_V_ce0();
    void thread_data_2_V_ce1();
    void thread_grp_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config11_s_fu_24_ap_start();
    void thread_res_0_V();
    void thread_res_0_V_ap_vld();
    void thread_res_1_V();
    void thread_res_1_V_ap_vld();
    void thread_res_2_V();
    void thread_res_2_V_ap_vld();
    void thread_res_3_V();
    void thread_res_3_V_ap_vld();
    void thread_res_4_V();
    void thread_res_4_V_ap_vld();
    void thread_res_5_V();
    void thread_res_5_V_ap_vld();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
